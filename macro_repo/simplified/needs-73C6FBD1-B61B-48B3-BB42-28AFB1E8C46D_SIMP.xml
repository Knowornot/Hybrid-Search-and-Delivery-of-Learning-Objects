<?xml version="1.0" encoding="UTF-8" standalone="no"?><Attributes><Attribute><Name>title</Name><Value>Concurrent Programming Using Java</Value></Attribute><Attribute><Name>description</Name><Value>Textbook with rich supplemental material published by Oxford University Press.

"The abundance of hype Java receives should not distract us from the fact that it has many excellent features for sequential programming: object-oriented, no explicit pointers and no pointer arithmetic, automatic garbage collection and no memory leaks, strong typing, platform independence, and many compiler and run-time checks. The Java development kit comes with a rich collection of class libraries for data structures, IO, networking, remote procedure calls, and graphics. Since threads are built-in, Java can be used for concurrent programming and developing multithreaded applications. In particular, it can be used by instructors as the concurrency platform in operating systems and related courses to give students practice and experience in concurrent programming.

Designed for students and professional programmers, this books covers multithreading issues such as race conditions, critical sections, mutual exclusion, and condition synchronization. Java programs that use semaphores and monitors are shown as examples. Next, the book describes several thread communication tools: message passing, the rendezvous, and remote procedure calls, also illustrated with Java examples. These tools are used extensively in client-server programming. An algorithm animation package, written in Java, is used in several of the example programs. The book concludes with a brief introduction to parallel processing with Java in a shared-memory multiprocessor or a distributed memory cluster environment.
Important and Unique Features

    * The material is keyed to five standard operating systems texts.
    * The book can be read by software professionals who have some architecture and systems background.
    * All Java example programs are stand-alone applications, not applets.
    * Each example program includes output from one or more sample runs.
    * Algorithm animation using the XtangoAnimator class is described.
    * Numerous programming assignments and other exercises are given."</Value></Attribute><Attribute><Name>content_language</Name><Value>en-US</Value></Attribute><Attribute><Name>format</Name><Value/></Attribute><Attribute><Name>requirement</Name><Value>DEFAULT</Value></Attribute><Attribute><Name>other_platform_requirement</Name><Value/></Attribute><Attribute><Name>duration</Name><Value>DEFAULT</Value></Attribute><Attribute><Name>interactivity_type</Name><Value/></Attribute><Attribute><Name>intended_user_language</Name><Value>DEFAULT</Value></Attribute><Attribute><Name>interactivity_level</Name><Value>LOMv1.0</Value></Attribute><Attribute><Name>context</Name><Value>DEFAULT</Value></Attribute><Attribute><Name>typical_age_range_min</Name><Value>DEFAULT</Value></Attribute><Attribute><Name>typical_age_range_max</Name><Value>DEFAULT</Value></Attribute><Attribute><Name>difficulty</Name><Value>LOMv1.0</Value></Attribute><Attribute><Name>typical_learning_time</Name><Value>DEFAULT</Value></Attribute><Attribute><Name>taxon_path_concept_and_discipline</Name><Value>DEFAULT</Value></Attribute><Attribute><Name>taxon_path_skilllevel_prerequisite</Name><Value>DEFAULT</Value></Attribute><Attribute><Name>taxon_path_idea_discipline</Name><Value>DEFAULT</Value></Attribute><Attribute><Name>intended_end_user_role</Name><Value/></Attribute></Attributes>