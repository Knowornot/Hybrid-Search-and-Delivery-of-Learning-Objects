Abstract: "The increase in the numbers enrolling in university computer courses makes huge demands on resources, and maintaining standards of teaching and tutorial support is almost impossible without a massive increase in staff. To overcome this situation, the authors have developed RoboProf, an automated learning environment which, as well as generating and assessing programming exercises, provides ongoing assistance and feedback to students without extra demands on lecturer and tutors' time. This system also contains a technique for detecting plagiarism, an increasing problem in computing courses worldwide. For this research, RoboProf was used to teach Java programming to a class containing nearly 300 students in the first year of a computing degree. Use of the system by students was monitored and recorded on log files in order to investigate the extent to which usage patterns influence achieved programming skill. An analysis shows that students who complete the set of RoboProf exercises perform significantly better than those who do not. The timeliness in which these exercises are completed relative to other students is significant: early solvers get higher marks, and students solving the problems with fewer attempts get higher marks. Not surprisingly, plagiarists achieve a lower score than those who do their own work. Other factors that were found to influence programming performance included entry standards and gender. Entry qualifications impacted positively on performance, and males performed significantly better than females. There was a significant positive correlation between the score achieved in the RoboProf course and the performance in a subsequent computing course administered in the traditional manner."

<citation>Charlie Daly, Jane M. Horgan; An automated learning system for Java programming; IEEE Transactions on Education; 47; 1; 10-17; 2004</citation>